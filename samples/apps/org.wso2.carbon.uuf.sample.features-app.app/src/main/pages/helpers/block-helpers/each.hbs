{{layout "org.wso2.carbon.uuf.sample.foundation.ui.main"}}
{{title "each | Block Helper Sample | " @config.appName}}
{{fragment "org.wso2.carbon.uuf.sample.foundation.ui.highlight" theme=@config.highlightjsTheme}}

{{#fillZone "content"}}
    <h3><b>each</b> Helper</h3>
    <hr />
    <p>You can iterate over a list using the 'each' helper. Inside the block, you can use this to reference the element
       being iterated over.</p>

    <h4><b>Example</b></h4>
    <figure class="highlight">
        <pre class="code lang-handlebars">
        &lt;ul class="people_list"&gt;
            \{{#each people}}
                &lt;li&gt;\{{this}}&lt;/li&gt;
            \{{/each}}
        &lt;/ul&gt;</pre>
    </figure>

    <p>when used with this context:</p>
    <figure class="highlight">
        <pre class="code lang-javascript">
        function onRequest(env) {
            var ArrayList = Java.type("java.util.ArrayList");
            var people = new ArrayList();
            people.add("Yehuda Katz");
            people.add("Alan Johnson");
            people.add("Charles Jolley");

            return {
                "people": people
            };
        }</pre>
    </figure>

    <p>will result in:</p>
    <figure class="highlight">
        <pre class="code lang-html">
        &lt;ul class="people_list"&gt;
            &lt;li&gt;Yehuda Katz&lt;/li&gt;
            &lt;li&gt;Alan Johnson&lt;/li&gt;
            &lt;li&gt;Charles Jolley&lt;/li&gt;
        &lt;/ul&gt;</pre>
    </figure>

    output:
    <div class="output">
        <ul style="margin-bottom: 0">
            {{#each people}}
                <li>{{this}}</li>
            {{/each}}
        </ul>
    </div>

    <p>You can use this expression in any context to reference the current context.</p>
    <p>You can optionally provide an <b>\{{else}}</b> section which will display only when the list is empty.</p>

    <figure class="highlight">
        <pre class="code lang-handlebars">
        \{{#each paragraphs}}
            &lt;p&gt;\{{this}}&lt;/p&gt;
        \{{else}}
            &lt;p class="empty"&gt;No content&lt;/p&gt;
        \{{/each}}</pre>
    </figure>

    <p>
        When looping through items in each, you can optionally reference the current loop index via <b>\{{@index}}</b>
    </p>
    <h4><b>Example</b></h4>
    <figure class="highlight">
        <pre class="code lang-handlebars">
        \{{#each people}}
            \{{@index}}: \{{this}}
        \{{/each}}</pre>
    </figure>

    <p>when used with this context:</p>
    <figure class="highlight">
        <pre class="code lang-javascript">
        function onRequest(env) {
            var ArrayList = Java.type("java.util.ArrayList");
            var people = new ArrayList();
            people.add("Yehuda Katz");
            people.add("Alan Johnson");
            people.add("Charles Jolley");

            return {
                "people": people
            };
        }</pre>
    </figure>

    <p>will result in:</p>
    <figure class="highlight">
        <pre class="code lang-html">
        &lt;ul class="people_list"&gt;
            0: Yehuda Katz
            1: Alan Johnson
            2: Charles Jolley
        &lt;/ul&gt;</pre>
    </figure>

    output:
    <figure class="highlight">
        <div class="output">
            {{#each people}}
                {{@index}}: {{this}}<br />
            {{/each}}
        </div>
    </figure>
    <p>Additionally for object iteration, <b>\{{@key}}</b> references the current key name:</p>

    <h4><b>Example</b></h4>
    <figure class="highlight">
        <pre class="code lang-handlebars">
        \{{#each people}}
            \{{@key}}: \{{this}}
        \{{/each}}</pre>
    </figure>

    <p>when used with this context:</p>
    <figure class="highlight">
       <pre class="code lang-javascript">
        function onRequest(env) {
            return {
                "people_map": {
                    "first": "Yehuda Katz",
                    "second": "Alan Johnson",
                    "third": "Charles Jolley"
                }
            };
        }</pre>
    </figure>

    <p>will result in:</p>
    <figure class="highlight">
        <pre class="code lang-html">
        &lt;ul class="people_list"&gt;
            first: Yehuda Katz
            second: Alan Johnson
            third: Charles Jolley
        &lt;/ul&gt;</pre>
    </figure>

    output:
    <div class="output">
        {{#each people_map}}
            {{@key}}: {{this}}<br />
        {{/each}}
    </div>

    <p>
        The first and last steps of iteration are noted via the @first and @last variables when iterating over an array.
        When iterating over an object only the @first is available.
        Nested each blocks may access the iteration variables via depth based paths.
        To access the parent index, for example, <b>\{{@../index}}</b> can be used.
    </p>
    <p>The each helper also supports block parameters, allowing for named references anywhere in the block.</p>

    <figure class="highlight">
        <pre class="code lang-handlebars">
        \{{#each array as |value key|}}
            \{{#each child as |childValue childKey|}}
                \{{key}} - \{{childKey}}. \{{childValue}}
            \{{/each}}
        \{{/each}}</pre>
    </figure>

    <p>Will create a key and value variable that children may access without the need for depth variable references.</p>
    <p>In the example above, <b>\{{key}}</b> is identical to <b>\{{@../key}}</b> but in many cases is more readable.</p>
{{/fillZone}}
